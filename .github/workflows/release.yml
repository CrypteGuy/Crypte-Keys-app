on:
  push:
    branches:
      - v0*
name: Release
jobs:
  release-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
      - name: Import codesign
        uses: apple-actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
      - name: Build
        env:
          APPLEID: ${{ secrets.APPLEID }}
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sh ./scripts/release.sh ${GITHUB_REF##*/}
  release-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          bash ./scripts/release.sh ${GITHUB_REF##*/}
  release-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Go
        uses: actions/setup-go@v2
      - name: Build
        env:
          WIN_CERT_PFX: ${{ secrets.WIN_CERT_PFX }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $env:WIN_CERT_PFX > "$HOME/cert.b64"
          certutil -decode "$HOME/cert.b64" "$HOME/cert.pfx"
          $env:CSC_LINK="$HOME/cert.pfx"
          $env:CSC_LINK
          $branch = (git branch --show-current)
          sh ./scripts/release.sh $branch
