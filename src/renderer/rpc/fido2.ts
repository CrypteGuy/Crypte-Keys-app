// Code generated by protoc-gen-tsrpc DO NOT EDIT.
// InputID: 7ff29f8bf554a657af5d5157f5a7cf7216883735
import {ipcRenderer} from 'electron'
import {randomBytes} from 'crypto'

import {
  DetectDevicesRequest,
  DetectDevicesResponse
} from './fido2.d'

export interface RPCError {
    code?: number;
    message?: string;
    details?: string;
}

const replyID = (): string => {
  return randomBytes(20).toString('hex')
}

export type ErrHandler = (err: RPCError) => void
var errHandler: ErrHandler = (err: RPCError) => {}
export const setErrHandler = (eh: ErrHandler) => {
  errHandler = eh
}

export const detectDevices = (
  req: DetectDevicesRequest,
  cb: (err: RPCError, resp: DetectDevicesResponse) => void
) => {
  const reply = 'Authenticators.detectDevices-' + replyID()
  ipcRenderer.on(reply, (event, arg) => {
    ipcRenderer.removeAllListeners(reply)
    if (arg.err) {
      console.error('RPC error (Authenticators.detectDevices):', arg.err)
      errHandler(arg.err)
    } else {
      console.log('RPC (Authenticators.detectDevices) done')
    }
    cb(arg.err, arg.resp)
  })
  console.log('RPC (Authenticators.detectDevices)...')
  ipcRenderer.send('rpc', {service: 'Authenticators', method: 'detectDevices', args: req, reply: reply})
}

